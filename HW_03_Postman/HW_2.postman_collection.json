{
	"info": {
		"_postman_id": "53c0c4d0-13e0-4224-9d5f-4385453ab3d2",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"User name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql('Stas');\r",
							"});\r",
							"pm.test(\"User age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql('43');\r",
							"});\r",
							"pm.test(\"User salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(2000);\r",
							"});\r",
							"\r",
							"var requestData = request.data; //вытащить данные из request (data)\r",
							"\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"User name\", function () {\r",
							"    pm.expect(requestData.name).to.eql(requestData.name);\r",
							"});\r",
							"pm.test(\"User age\", function () {\r",
							"    pm.expect(requestData.age).to.eql(requestData.age);\r",
							"});\r",
							"pm.test(\"User salary\", function () {\r",
							"    pm.expect(requestData.salary).to.eql(requestData.salary);\r",
							"});\r",
							"\r",
							"console.log(\"family\"); //Вывести в консоль параметр family из response.\r",
							"\r",
							"//Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"Check u_salary_1_5_year\", function () {\r",
							"    var responseData = pm.response.json();\r",
							"    pm.expect(responseData.family.u_salary_1_5_year).to.eql(requestData.salary*4); \r",
							"}); \r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Stas",
							"type": "text"
						},
						{
							"key": "age",
							"value": "43",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Спарсить response body в json.\r",
							"var jsonData = pm.response.json();\r",
							"//Спарсить request.\r",
							"var reqData = request.data;\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"User name\", function () {\r",
							"    pm.expect(reqData.name).to.eql(reqData.name); \r",
							"});\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"User age\", function () {\r",
							"    pm.expect(reqData.age).to.eql(reqData.age);\r",
							"});\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"User salary\", function () {\r",
							"    pm.expect(reqData.salary).to.eql(reqData.salary);\r",
							"});\r",
							"//Вывести в консоль параметр family из response.\r",
							"console.log(\"Param family from response\", jsonData.family)\r",
							"\r",
							"//Проверить, что у параметра dog есть параметры name.\r",
							"var dog = jsonData.family.pets.dog;\r",
							"\r",
							"pm.test(\"Check dog's name\", function () {\r",
							"    pm.expect(dog).to.have.property(\"name\")\r",
							"});  \r",
							"//Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Check dog's age\", function () {\r",
							"    pm.expect(dog).to.have.property(\"age\")\r",
							"});\r",
							"//Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"Name is Luky\", function () {\r",
							"    var name = jsonData.family.pets.dog.name;\r",
							"    pm.expect(name).to.eql(\"Luky\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Stas&age=43&salary=2000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Stas"
						},
						{
							"key": "age",
							"value": "43"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Спарсить response body в json.\r",
							"var jsonData = pm.response.json();\r",
							"//Спарсить request. (при методе GET по другому скрипт пишется)\r",
							"var reqData = pm.request.url.query.toObject();\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"User name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(reqData.name); \r",
							"});\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"User age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(+reqData.age);\r",
							"});\r",
							"//Вывести в консоль параметр salary из request.\r",
							"console.log(\"Param salary from request\", reqData.salary)\r",
							"//Вывести в консоль параметр salary из response.\r",
							"console.log(\"Param salary from response\", jsonData.salary)\r",
							"//Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(\"Param salary from response\", jsonData.salary[0]);\r",
							"//Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"Param salary from response\", jsonData.salary[1]);\r",
							"//Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"Param salary from response\", jsonData.salary[2]);\r",
							"\r",
							"//Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"var salary = jsonData.salary[0]\r",
							"pm.test(\"User salary 4000\", function () {\r",
							"   pm.expect(salary).to.eql(+reqData.salary);\r",
							"});\r",
							"//Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"var salary = jsonData.salary[1]\r",
							"pm.test(\"User salary 8000\", function () {\r",
							"   pm.expect(+salary).to.eql(reqData.salary*2);\r",
							"});\r",
							"//Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"var salary = jsonData.salary[2]\r",
							"pm.test(\"User salary 12000\", function () {\r",
							"   pm.expect(+salary).to.eql(reqData.salary*3);\r",
							"});\r",
							"//Создать в окружении переменную name\r",
							"pm.environment.set(\"name\");\r",
							"//Создать в окружении переменную age\r",
							"pm.environment.set(\"age\");\r",
							"//Создать в окружении переменную salary\r",
							"pm.environment.set(\"salary\");\r",
							"\r",
							"//Передать в окружение переменную name\r",
							"var get_name = jsonData.name;\r",
							"pm.environment.set('name', get_name);\r",
							"//Передать в окружение переменную age\r",
							"var get_age = jsonData.age;\r",
							"pm.environment.set('age', get_age);\r",
							"//Передать в окружение переменную salary\r",
							"var get_salary = jsonData.salary;\r",
							"pm.environment.set('salary', get_salary[0]);\r",
							"//Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.--> разбираем циклы 19.11.21 в уроке, см. запись!!!\r",
							"var json_resp = JSON.parse(responseBody);\r",
							"var salary = json_resp.salary\r",
							"\r",
							"//for (var i=0; i < salary.length; i++) { \r",
							"//    console.log(\"Salary_\" + i + \": \" +salary[i]) \r",
							"//}\r",
							"for (var i of salary) {\r",
							"    console.log(\"salary = \" + i)\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Stas&age=43&salary=4000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Stas"
						},
						{
							"key": "age",
							"value": "43"
						},
						{
							"key": "salary",
							"value": "4000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Вставить параметр salary из окружения в request --> Добавил в body {{salary}}\r",
							"//Вставить параметр age из окружения в age --> Добавил в body {{age}}\r",
							"//Вставить параметр name из окружения в name --> Добавил в body {{name}}\r",
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Спарсить response body в json\r",
							"var jsonData = pm.response.json();\r",
							"//Спарсить request\r",
							"var reqData = request.data;\r",
							"//Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"User salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(reqData.salary);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}